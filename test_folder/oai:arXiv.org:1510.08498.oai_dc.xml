<oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.openarchives.org/OAI/2.0/" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd">
 <dc:title>A Coinductive Approach to Computing with Compact Sets</dc:title>
 <dc:creator>Berger, Ulrich</dc:creator>
 <dc:creator>Spreen, Dieter</dc:creator>
 <dc:subject>Computer Science - Logic in Computer Science</dc:subject>
 <dc:subject>03B70, 03F60, 68T15</dc:subject>
 <dc:subject>F.4.1</dc:subject>
 <dc:subject>I.2.2</dc:subject>
 <dc:subject>I.2.3</dc:subject>
 <dc:subject>D.2.4</dc:subject>
 <dc:description>  Exact representations of real numbers such as the signed digit representation
or more generally linear fractional representations or the infinite Gray code
represent real numbers as infinite streams of digits. In earlier work by the
first author it was shown how to extract certified algorithms working with the
signed digit representations from constructive proofs. In this paper we lay the
foundation for doing a similar thing with nonempty compact sets. It turns out
that a representation by streams of finitely many digits is impossible and
instead trees are needed.
</dc:description>
 <dc:description>Comment: 34 pages</dc:description>
 <dc:date>2015-10-28</dc:date>
 <dc:date>2016-05-25</dc:date>
 <dc:type>text</dc:type>
 <dc:identifier>http://arxiv.org/abs/1510.08498</dc:identifier>
 </oai_dc:dc>

